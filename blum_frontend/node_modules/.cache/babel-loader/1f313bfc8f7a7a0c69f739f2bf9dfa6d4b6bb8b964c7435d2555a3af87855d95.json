{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaow\\\\blum\\\\blum_frontend\\\\src\\\\components\\\\SalesChart.jsx\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport formatCurrency from '../utils/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesChart = ({\n  data,\n  monthlyTarget\n}) => {\n  const chartData = data.length > 0 ? data : [{\n    date: new Date().toLocaleDateString('pt-BR'),\n    'Vendas Acumuladas': 0\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        tickFormatter: value => `R$ ${formatCurrency(value)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => `R$ ${formatCurrency(value)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n        y: monthlyTarget,\n        label: {\n          value: `Meta: R$ ${formatCurrency(monthlyTarget)}`,\n          position: 'top'\n        },\n        stroke: \"red\",\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Vendas Acumuladas\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ReferenceLine","formatCurrency","jsxDEV","_jsxDEV","SalesChart","data","monthlyTarget","chartData","length","date","Date","toLocaleDateString","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tickFormatter","value","formatter","y","label","position","stroke","type","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/joaow/blum/blum_frontend/src/components/SalesChart.jsx"],"sourcesContent":["import {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n} from 'recharts';\r\nimport formatCurrency from '../utils/format';\r\n\r\nconst SalesChart = ({ data, monthlyTarget }) => {\r\n  const chartData = data.length > 0 ? data : [{ date: new Date().toLocaleDateString('pt-BR'), 'Vendas Acumuladas': 0 }];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart\r\n        data={chartData}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis tickFormatter={(value) => `R$ ${formatCurrency(value)}`} />\r\n        <Tooltip formatter={(value) => `R$ ${formatCurrency(value)}`} />\r\n        <Legend />\r\n        <ReferenceLine y={monthlyTarget} label={{ value: `Meta: R$ ${formatCurrency(monthlyTarget)}`, position: 'top' }} stroke=\"red\" strokeDasharray=\"3 3\" />\r\n        <Line type=\"monotone\" dataKey=\"Vendas Acumuladas\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,EACnBC,aAAa,QACR,UAAU;AACjB,OAAOC,cAAc,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAC9C,MAAMC,SAAS,GAAGF,IAAI,CAACG,MAAM,GAAG,CAAC,GAAGH,IAAI,GAAG,CAAC;IAAEI,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;IAAE,mBAAmB,EAAE;EAAE,CAAC,CAAC;EAErH,oBACER,OAAA,CAACJ,mBAAmB;IAACa,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CX,OAAA,CAACX,SAAS;MACRa,IAAI,EAAEE,SAAU;MAChBQ,MAAM,EAAE;QACNC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,gBAEFX,OAAA,CAACP,aAAa;QAACwB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCrB,OAAA,CAACT,KAAK;QAAC+B,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBrB,OAAA,CAACR,KAAK;QAAC+B,aAAa,EAAGC,KAAK,IAAK,MAAM1B,cAAc,CAAC0B,KAAK,CAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClErB,OAAA,CAACN,OAAO;QAAC+B,SAAS,EAAGD,KAAK,IAAK,MAAM1B,cAAc,CAAC0B,KAAK,CAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChErB,OAAA,CAACL,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVrB,OAAA,CAACH,aAAa;QAAC6B,CAAC,EAAEvB,aAAc;QAACwB,KAAK,EAAE;UAAEH,KAAK,EAAE,YAAY1B,cAAc,CAACK,aAAa,CAAC,EAAE;UAAEyB,QAAQ,EAAE;QAAM,CAAE;QAACC,MAAM,EAAC,KAAK;QAACZ,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtJrB,OAAA,CAACV,IAAI;QAACwC,IAAI,EAAC,UAAU;QAACR,OAAO,EAAC,mBAAmB;QAACO,MAAM,EAAC,SAAS;QAACE,SAAS,EAAE;UAAEC,CAAC,EAAE;QAAE;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAACY,EAAA,GAxBIhC,UAAU;AA0BhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}